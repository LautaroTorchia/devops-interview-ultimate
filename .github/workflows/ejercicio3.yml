name: CI/CD Pipeline Nginx

on:
  push:
    paths:
      - "ejercicio3/index.html"
      - "ejercicio3/Dockerfile"
      - "ejercicio3/docker-compose.yml"
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image
        run: |
          cd ejercicio3/
          docker build -t ejercicio3-nginx:latest .

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image to DockerHub
        run: |
          docker tag ejercicio3-nginx:latest lautarotorchia/ejercicio3-nginx:latest
          docker push lautarotorchia/ejercicio3-nginx:latest

  security:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Scan Docker image for vulnerabilities with Trivy (Docker Version)
        run: |
          docker pull lautarotorchia/ejercicio3-nginx:latest
          docker run --rm aquasec/trivy:latest image --exit-code 1 --severity HIGH,CRITICAL lautarotorchia/ejercicio3-nginx:latest || true

  prepare-deploy:
    runs-on: ubuntu-latest
    needs: security
    steps:

      - name: Setup GCP CLI
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Start GCP VM for deployment
        run: |
          gcloud compute instances start ${{ secrets.GCP_INSTANCE_NAME }} --zone=us-central1-c

      - name: Wait for instance to be ready
        run: |
          sleep 60  # Asegurar que la instancia tenga tiempo de arrancar

  deploy:
    runs-on: [self-hosted]
    needs: prepare-deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy with Docker Compose
        run: |
          cd ejercicio3
          docker-compose up -d --remove-orphans

      - name: Verify Deployment
        run: |
          curl -s http://localhost:80 | grep "Bienvenidos a Nginx"

  stop-vm:
    runs-on: ubuntu-latest
    needs: deploy
    steps:

      - name: Setup GCP CLI
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Start GCP VM for deployment
        run: |
          gcloud compute instances stop ${{ secrets.GCP_INSTANCE_NAME }} --zone=us-central1-c