name: CI/CD Pipeline Nginx

on:
  push:
    paths:
      - "ejercicio3/index.html"
      - "ejercicio3/Dockerfile"
      - "ejercicio3/docker-compose.yml"
    branches:
      - main

jobs:
  code-tests:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Placeholder for Code Tests
        run: |
          echo "Code Tests will be implemented here."

  security-tests:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Static security analysis with Trivy
        run: |
          docker run --rm -v $(pwd):/project aquasec/trivy:latest fs /project --exit-code 1 --severity HIGH,CRITICAL || true

  build-and-publish:
    runs-on: ubuntu-22.04
    needs:
      - code-tests
      - security-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image
        run: |
          cd ejercicio3/
          docker build -t ejercicio3-nginx:${{ github.sha }} .

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image to DockerHub
        run: |
          docker tag ejercicio3-nginx:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/ejercicio3-nginx:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/ejercicio3-nginx:${{ github.sha }}

          docker tag ejercicio3-nginx:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/ejercicio3-nginx:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/ejercicio3-nginx:latest

  prepare-deploy:
    runs-on: ubuntu-22.04
    needs: build-and-publish
    steps:
      - name: Setup GCP CLI
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Start GCP VM for deployment
        run: |
          gcloud compute instances start ${{ secrets.GCP_INSTANCE_NAME }} --zone=us-central1-c

      - name: Wait for instance to be ready
        run: |
          echo "Waiting for Instance to be ready"
          sleep 30

      - name: Schedule VM Shutdown
        run: |
          gcloud compute ssh ${{ secrets.GCP_INSTANCE_NAME }} \
          --zone=us-central1-c \
          --command="echo 'sudo shutdown -h now' | at now + 30 minutes"

  deploy:
    runs-on: [self-hosted]
    needs: prepare-deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup GCP CLI
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Deploy with Docker Compose
        run: |
          cd ejercicio3
          docker compose down
          docker compose pull
          docker compose up -d --remove-orphans

      - name: Get Public IP Address
        id: get-ip
        run: |
          PUBLIC_IP=$(gcloud compute instances describe ${{ secrets.GCP_INSTANCE_NAME }} \
            --zone=us-central1-c \
            --format='get(networkInterfaces[0].accessConfigs[0].natIP)')
          echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV
          echo "Public IP Address: $PUBLIC_IP"

      - name: Verify Deployment
        run: |
          echo "Verifying deployment at http://${{ env.PUBLIC_IP }}"
          curl -s http://${{ env.PUBLIC_IP }} | grep "Welcome to Nginx"

      - name: Add Deployment Link to GitHub UI
        run: |
          echo "::notice title=Deployment URL::Deployed! Visit: [http://${{ env.PUBLIC_IP }}](http://${{ env.PUBLIC_IP }})"
